package faker

/**
 * generates ISBN numbers
 */
object Code extends Base {
  /**
   * generates an ISBN number.
   *
   * There are two types of ISBN numbers:
   *
   * - Base 13 Numbers are used since 2006. So they will be generated by default.
   * - Base 10 ISBNs were used until about 2007.
   *
   * @param base the base of the ISBN number to be generated (either 10 or 13). Defaults to 13.
   */
  def isbn(base: Int = 13): String = if (base == 13) generateBase13ISBN else generateBase10ISBN

  private def generateBase10ISBN = {
    val num = numerify("#" * 9)
    val remainder = sum(num, (idx, value) => idx * value) % 11
    val check = if (remainder == 10) "X" else remainder.toString
    s"$num$check"
  }

  private def generateBase13ISBN = {
    val num = numerify("#" * 12)
    val remainder = sum(num, (idx, value) => if (idx % 2 == 1) value else value * 3) % 10
    val check = (10 - remainder) % 10
    s"$num$check"
  }

  private def sum(num: String, sumFun: (Int, Int) => Int) = {
    val values = num.map(c => c - '0')
    val zipped = (1 to num.length).zip(values)
    zipped.foldLeft(0) {
      case (summed, (idx, value)) =>
        summed + sumFun(idx, value)
    }
  }
}
